
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
   <HEAD>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   
      <TITLE>Integrated Resource: shape_data_quality_criteria_schema</TITLE>
   </HEAD>
   <body>
      <h2>Schema: shape_data_quality_criteria_schema</h2>
      <p><i>Source : ISO 10303-59</i></p><code><br><br><a name="shape_data_quality_criteria_schema">SCHEMA <b>shape_data_quality_criteria_schema</b>;</a><br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/geometric_model_schema/geometric_model_schema.htm#geometric_model_schema">geometric_model_schema</A>;
         &nbsp;&nbsp;&nbsp;-- ISO 10303-42<br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/geometry_schema/geometry_schema.htm#geometry_schema">geometry_schema</A>;
         &nbsp;&nbsp;&nbsp;-- ISO 10303-42<br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema">measure_schema</A>;
         &nbsp;&nbsp;&nbsp;-- ISO 10303-41<br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/product_data_quality_criteria_schema/product_data_quality_criteria_schema.htm#product_data_quality_criteria_schema">product_data_quality_criteria_schema</A>;
         &nbsp;&nbsp;&nbsp;-- ISO 10303-59<br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/product_data_quality_inspection_result_schema/product_data_quality_inspection_result_schema.htm#product_data_quality_inspection_result_schema">product_data_quality_inspection_result_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-59<br>&nbsp;&nbsp;(<A HREF="../../../data/resources/product_data_quality_inspection_result_schema/product_data_quality_inspection_result_schema.htm#product_data_quality_inspection_result_schema.data_quality_inspection_result_representation">data_quality_inspection_result_representation</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/product_data_quality_inspection_result_schema/product_data_quality_inspection_result_schema.htm#product_data_quality_inspection_result_schema.data_quality_report_measurement_association">data_quality_report_measurement_association</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/product_data_quality_inspection_result_schema/product_data_quality_inspection_result_schema.htm#product_data_quality_inspection_result_schema.data_quality_inspection_report">data_quality_inspection_report</A>);
         <br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/qualified_measure_schema/qualified_measure_schema.htm#qualified_measure_schema">qualified_measure_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-45<br>&nbsp;&nbsp;(<A HREF="../../../data/resources/qualified_measure_schema/qualified_measure_schema.htm#qualified_measure_schema.qualified_representation_item">qualified_representation_item</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/qualified_measure_schema/qualified_measure_schema.htm#qualified_measure_schema.value_qualifier">value_qualifier</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/qualified_measure_schema/qualified_measure_schema.htm#qualified_measure_schema.type_qualifier">type_qualifier</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/qualified_measure_schema/qualified_measure_schema.htm#qualified_measure_schema.measure_representation_item">measure_representation_item</A>);
         <br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/representation_schema/representation_schema.htm#representation_schema">representation_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-43<br>&nbsp;&nbsp;(<A HREF="../../../data/resources/representation_schema/representation_schema.htm#representation_schema.compound_representation_item">compound_representation_item</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/representation_schema/representation_schema.htm#representation_schema.representation">representation</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/representation_schema/representation_schema.htm#representation_schema.value_representation_item">value_representation_item</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/representation_schema/representation_schema.htm#representation_schema.set_representation_item">set_representation_item</A>);
         <br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/shape_data_quality_inspection_result_schema/shape_data_quality_inspection_result_schema.htm#shape_data_quality_inspection_result_schema">shape_data_quality_inspection_result_schema</A>;
         &nbsp;&nbsp;&nbsp;-- ISO 10303-59<br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/support_resource_schema/support_resource_schema.htm#support_resource_schema">support_resource_schema</A>&nbsp;&nbsp;&nbsp;-- ISO 10303-41<br>&nbsp;&nbsp;(<A HREF="../../../data/resources/support_resource_schema/support_resource_schema.htm#support_resource_schema.text">text</A>,<br>
         &nbsp;&nbsp;
         <A HREF="../../../data/resources/support_resource_schema/support_resource_schema.htm#support_resource_schema.bag_to_set">bag_to_set</A>);
         <br><br></code><code>
         REFERENCE FROM 
         <A HREF="../../../data/resources/topology_schema/topology_schema.htm#topology_schema">topology_schema</A>;
         &nbsp;&nbsp;&nbsp;-- ISO 10303-42<br><br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_assessment_specification_select">TYPE </A><b>shape_data_quality_assessment_specification_select</b> =
         
         
         SELECT<br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_value_limit_type_select">TYPE </A><b>shape_data_quality_value_limit_type_select</b> =
         
         
         SELECT<br>
         &nbsp;&nbsp;&nbsp;(<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_value_range">shape_data_quality_value_range</A>, <br>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_value_limit">shape_data_quality_value_limit</A>);<br>
         END_TYPE; 
         <br></code><code><br><A NAME="shape_data_quality_criteria_schema.abrupt_change_of_surface_normal">ENTITY <b>abrupt_change_of_surface_normal</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_irregularity">geometry_with_local_irregularity</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.abrupt_change_of_surface_normal.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.abrupt_change_of_surface_normal.small_vector_tolerance">small_vector_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.abrupt_change_of_surface_normal.test_point_distance_tolerance">test_point_distance_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.abrupt_change_of_surface_normal.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.abrupt_change_of_surface_normal.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.abrupt_change_of_surface_normal.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.POINT_ON_SURFACE',
            'GEOMETRY_SCHEMA.POINT_ON_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.abrupt_change_of_surface_normal.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.curve_with_excessive_segments">ENTITY <b>curve_with_excessive_segments</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_geometry">overcomplex_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.curve_with_excessive_segments.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_excessive_segments.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_excessive_segments.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_excessive_segments.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_OR_COMPOSITE_CURVE_SELECT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_excessive_segments.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_excessive_segments.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.curve_with_small_curvature_radius">ENTITY <b>curve_with_small_curvature_radius</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.curve_with_small_curvature_radius.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_small_curvature_radius.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_small_curvature_radius.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_small_curvature_radius.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_small_curvature_radius.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.POINT_ON_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.curve_with_small_curvature_radius.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.disconnected_face_set">ENTITY <b>disconnected_face_set</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_topology">erroneous_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.disconnected_face_set.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.disconnected_face_set.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.disconnected_face_set.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.disconnected_face_set.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.disconnected_face_set.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.discontinuous_geometry">ENTITY <b>discontinuous_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.g1_discontinuous_curve">g1_discontinuous_curve</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.g2_discontinuous_curve">g2_discontinuous_curve</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.g1_discontinuous_surface">g1_discontinuous_surface</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.g2_discontinuous_surface">g2_discontinuous_surface</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_geometry">inapt_geometry</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.edge_with_excessive_segments">ENTITY <b>edge_with_excessive_segments</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_topology_and_geometry_relationship">overcomplex_topology_and_geometry_relationship</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.edge_with_excessive_segments.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.edge_with_excessive_segments.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.edge_with_excessive_segments.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.edge_with_excessive_segments.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.edge_with_excessive_segments.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.edge_with_excessive_segments.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.entirely_narrow_face">ENTITY <b>entirely_narrow_face</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_nearly_degenerate_geometry">topology_related_to_nearly_degenerate_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.entirely_narrow_face.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_face.width_tolerance">width_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_face.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_face.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_face.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_face.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.entirely_narrow_solid">ENTITY <b>entirely_narrow_solid</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_manifold_solid_brep">inapt_manifold_solid_brep</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.entirely_narrow_solid.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_solid.width_tolerance">width_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_solid.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_solid.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRIC_MODEL_SCHEMA.MANIFOLD_SOLID_BREP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_solid.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_solid.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.entirely_narrow_surface">ENTITY <b>entirely_narrow_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.nearly_degenerate_geometry">nearly_degenerate_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.entirely_narrow_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_surface.width_tolerance">width_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_surface.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_surface.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.BOUNDED_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_surface.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.entirely_narrow_surface.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_curve_definition">ENTITY <b>erroneous_b_spline_curve_definition</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_geometry">erroneous_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_curve_definition.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_curve_definition.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_curve_definition.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_CURVE_WITH_KNOTS']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_curve_definition.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_curve_definition.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_surface_definition">ENTITY <b>erroneous_b_spline_surface_definition</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_geometry">erroneous_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_surface_definition.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_surface_definition.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_surface_definition.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE_WITH_KNOTS']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_surface_definition.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.erroneous_b_spline_surface_definition.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.erroneous_data">ENTITY <b>erroneous_data</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.erroneous_topology">erroneous_topology</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.erroneous_geometry">erroneous_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.erroneous_topology_and_geometry_relationship">erroneous_topology_and_geometry_relationship</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.erroneous_manifold_solid_brep">erroneous_manifold_solid_brep</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.erroneous_geometry">ENTITY <b>erroneous_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.inconsistent_curve_transition_code">inconsistent_curve_transition_code</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.erroneous_b_spline_curve_definition">erroneous_b_spline_curve_definition</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.inconsistent_surface_transition_code">inconsistent_surface_transition_code</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.erroneous_b_spline_surface_definition">erroneous_b_spline_surface_definition</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_data">erroneous_data</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.erroneous_manifold_solid_brep">ENTITY <b>erroneous_manifold_solid_brep</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.wrongly_oriented_void">wrongly_oriented_void</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.wrongly_placed_void">wrongly_placed_void</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.intersecting_shells_in_solid">intersecting_shells_in_solid</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.solid_with_wrong_number_of_voids">solid_with_wrong_number_of_voids</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_data">erroneous_data</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.erroneous_topology">ENTITY <b>erroneous_topology</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.open_edge_loop">open_edge_loop</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.open_closed_shell">open_closed_shell</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.inconsistent_adjacent_face_normals">inconsistent_adjacent_face_normals</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.disconnected_face_set">disconnected_face_set</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_data">erroneous_data</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.erroneous_topology_and_geometry_relationship">ENTITY <b>erroneous_topology_and_geometry_relationship</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.inconsistent_edge_and_curve_directions">inconsistent_edge_and_curve_directions</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.inconsistent_face_and_surface_normals">inconsistent_face_and_surface_normals</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.inconsistent_face_and_closed_shell_normals">inconsistent_face_and_closed_shell_normals</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.intersecting_loops_in_face">intersecting_loops_in_face</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.wrongly_placed_loop">wrongly_placed_loop</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_data">erroneous_data</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.excessively_high_degree_curve">ENTITY <b>excessively_high_degree_curve</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_geometry">overcomplex_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_curve.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_curve.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_curve.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_curve.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_curve.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_curve.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.excessively_high_degree_surface">ENTITY <b>excessively_high_degree_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_geometry">overcomplex_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_surface.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_surface.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_surface.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_surface.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.excessively_high_degree_surface.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.extreme_patch_width_variation">ENTITY <b>extreme_patch_width_variation</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_irregularity">geometry_with_local_irregularity</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.extreme_patch_width_variation.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.extreme_patch_width_variation.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.RATIO_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.extreme_patch_width_variation.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.RATIO_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.extreme_patch_width_variation.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.extreme_patch_width_variation.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_SURFACE_KNOT_LOCATOR']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.extreme_patch_width_variation.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.face_surface_with_excessive_patches_in_one_direction">ENTITY <b>face_surface_with_excessive_patches_in_one_direction</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_topology_and_geometry_relationship">overcomplex_topology_and_geometry_relationship</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.face_surface_with_excessive_patches_in_one_direction.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.face_surface_with_excessive_patches_in_one_direction.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.face_surface_with_excessive_patches_in_one_direction.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.face_surface_with_excessive_patches_in_one_direction.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.face_surface_with_excessive_patches_in_one_direction.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.face_surface_with_excessive_patches_in_one_direction.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.free_edge">ENTITY <b>free_edge</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology">inapt_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.free_edge.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.free_edge.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.free_edge.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.free_edge.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.free_edge.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.free_edge.wr:wr5">WR5: SIZEOF(QUERY(sdqr &lt;* bag_to_set(USEDIN(SELF,
            'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'DATA_QUALITY_INSPECTION_RESULT.'+
            'CRITERION_INSPECTED'))|
            ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
            IN TYPEOF(sdqr)) AND
            (SIZEOF(QUERY(sdqiir &lt;* bag_to_set(USEDIN(sdqr,
            'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'DATA_QUALITY_INSPECTION_REPORT.'+
            'INSPECTION_RESULT'))|
            ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
            IN TYPEOF(sdqiir)) AND
            (SIZEOF(QUERY(sdqiri &lt;* sdqiir.inspected_instances|
            ('TOPOLOGY_SCHEMA.CLOSED_SHELL'
            IN TYPEOF(sdqiri.inspected_elements[1])))) = 0)
            )) = 0)
            )) = 0;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.g1_discontinuity_between_adjacent_faces">ENTITY <b>g1_discontinuity_between_adjacent_faces</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.non_smooth_geometry_transition_across_edge">non_smooth_geometry_transition_across_edge</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.g1_discontinuity_between_adjacent_faces.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuity_between_adjacent_faces.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuity_between_adjacent_faces.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.PLANE_ANGLE_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuity_between_adjacent_faces.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuity_between_adjacent_faces.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuity_between_adjacent_faces.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.PLANE_ANGLE_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.g1_discontinuous_curve">ENTITY <b>g1_discontinuous_curve</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.discontinuous_geometry">discontinuous_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_curve.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_curve.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_curve.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.PLANE_ANGLE_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_curve.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_curve.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_CURVE_KNOT_LOCATOR']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_curve.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.g1_discontinuous_surface">ENTITY <b>g1_discontinuous_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.discontinuous_geometry">discontinuous_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_surface.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_surface.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.PLANE_ANGLE_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_surface.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_surface.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_SURFACE_KNOT_LOCATOR']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g1_discontinuous_surface.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.PLANE_ANGLE_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces">ENTITY <b>g2_discontinuity_between_adjacent_faces</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.non_smooth_geometry_transition_across_edge">non_smooth_geometry_transition_across_edge</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces.assessment_specification_2">assessment_specification_2 : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces.flat_curvature_radius_tolerance">flat_curvature_radius_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces.wr:wr2">WR2: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(assessment_specification_2\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.RATIO_MEASURE'
            IN value_limit_type(assessment_specification_2\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces.wr:wr3">WR3: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'PLANE_ANGLE_AND_RATIO_PAIR');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces.wr:wr4">WR4: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces.wr:wr5">WR5: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces.wr:wr6">WR6: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.RATIO_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve">ENTITY <b>g2_discontinuous_curve</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.discontinuous_geometry">discontinuous_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve.assessment_specification_2">assessment_specification_2 : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve.flat_curvature_radius_tolerance">flat_curvature_radius_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve.wr:wr2">WR2: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(assessment_specification_2\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.RATIO_MEASURE'
            IN value_limit_type(assessment_specification_2\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve.wr:wr3">WR3: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'PLANE_ANGLE_AND_RATIO_PAIR');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve.wr:wr4">WR4: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve.wr:wr5">WR5: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_CURVE_KNOT_LOCATOR']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_curve.wr:wr6">WR6: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface">ENTITY <b>g2_discontinuous_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.discontinuous_geometry">discontinuous_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface.assessment_specification_2">assessment_specification_2 : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface.flat_curvature_radius_tolerance">flat_curvature_radius_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface.wr:wr2">WR2: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(assessment_specification_2\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.RATIO_MEASURE'
            IN value_limit_type(assessment_specification_2\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface.wr:wr3">WR3: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'PLANE_ANGLE_AND_RATIO_PAIR');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface.wr:wr4">WR4: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface.wr:wr5">WR5: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_SURFACE_KNOT_LOCATOR']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.g2_discontinuous_surface.wr:wr6">WR6: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.RATIO_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.gap_between_adjacent_edges_in_loop">ENTITY <b>gap_between_adjacent_edges_in_loop</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometric_gap_in_topology">geometric_gap_in_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.gap_between_adjacent_edges_in_loop.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_adjacent_edges_in_loop.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_adjacent_edges_in_loop.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_adjacent_edges_in_loop.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_LOOP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_adjacent_edges_in_loop.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.ORIENTED_EDGE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_adjacent_edges_in_loop.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.gap_between_edge_and_base_surface">ENTITY <b>gap_between_edge_and_base_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometric_gap_in_topology">geometric_gap_in_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.gap_between_edge_and_base_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_edge_and_base_surface.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_edge_and_base_surface.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_edge_and_base_surface.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_edge_and_base_surface.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE',
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_edge_and_base_surface.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.gap_between_faces_related_to_an_edge">ENTITY <b>gap_between_faces_related_to_an_edge</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometric_gap_in_topology">geometric_gap_in_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.gap_between_faces_related_to_an_edge.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_faces_related_to_an_edge.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_faces_related_to_an_edge.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_faces_related_to_an_edge.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_faces_related_to_an_edge.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_faces_related_to_an_edge.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.gap_between_pcurves_related_to_an_edge">ENTITY <b>gap_between_pcurves_related_to_an_edge</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometric_gap_in_topology">geometric_gap_in_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.gap_between_pcurves_related_to_an_edge.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_pcurves_related_to_an_edge.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_pcurves_related_to_an_edge.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_pcurves_related_to_an_edge.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_pcurves_related_to_an_edge.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.POINT_ON_SURFACE',
            'GEOMETRY_SCHEMA.POINT_ON_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_pcurves_related_to_an_edge.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_base_surface">ENTITY <b>gap_between_vertex_and_base_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometric_gap_in_topology">geometric_gap_in_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_base_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_base_surface.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_base_surface.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_base_surface.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_base_surface.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.VERTEX_POINT',
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_base_surface.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_edge">ENTITY <b>gap_between_vertex_and_edge</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometric_gap_in_topology">geometric_gap_in_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_edge.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_edge.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_edge.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_edge.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_edge.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.VERTEX_POINT',
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.gap_between_vertex_and_edge.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.geometric_gap_in_topology">ENTITY <b>geometric_gap_in_topology</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.gap_between_adjacent_edges_in_loop">gap_between_adjacent_edges_in_loop</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.gap_between_vertex_and_base_surface">gap_between_vertex_and_base_surface</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.gap_between_vertex_and_edge">gap_between_vertex_and_edge</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.gap_between_edge_and_base_surface">gap_between_edge_and_base_surface</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.gap_between_pcurves_related_to_an_edge">gap_between_pcurves_related_to_an_edge</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.gap_between_faces_related_to_an_edge">gap_between_faces_related_to_an_edge</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">inapt_topology_and_geometry_relationship</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.geometry_with_local_irregularity">ENTITY <b>geometry_with_local_irregularity</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.extreme_patch_width_variation">extreme_patch_width_variation</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.zero_surface_normal">zero_surface_normal</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.abrupt_change_of_surface_normal">abrupt_change_of_surface_normal</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_geometry">inapt_geometry</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">ENTITY <b>geometry_with_local_near_degeneracy</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.curve_with_small_curvature_radius">curve_with_small_curvature_radius</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.short_length_curve_segment">short_length_curve_segment</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.surface_with_small_curvature_radius">surface_with_small_curvature_radius</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.small_area_surface_patch">small_area_surface_patch</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.narrow_surface_patch">narrow_surface_patch</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.indistinct_surface_knots">indistinct_surface_knots</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.indistinct_curve_knots">indistinct_curve_knots</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.nearly_degenerate_surface_boundary">nearly_degenerate_surface_boundary</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.nearly_degenerate_surface_patch">nearly_degenerate_surface_patch</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_geometry">inapt_geometry</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.high_degree_axi_symmetric_surface">ENTITY <b>high_degree_axi_symmetric_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_geometry">overcomplex_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.high_degree_axi_symmetric_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_axi_symmetric_surface.approximation_tolerance">approximation_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_axi_symmetric_surface.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_axi_symmetric_surface.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_axi_symmetric_surface.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_axi_symmetric_surface.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_axi_symmetric_surface.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.high_degree_conic">ENTITY <b>high_degree_conic</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_geometry">overcomplex_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.high_degree_conic.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_conic.approximation_tolerance">approximation_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_conic.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_conic.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_conic.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_conic.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_conic.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.high_degree_linear_curve">ENTITY <b>high_degree_linear_curve</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_geometry">overcomplex_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.high_degree_linear_curve.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_linear_curve.approximation_tolerance">approximation_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_linear_curve.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_linear_curve.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_linear_curve.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_linear_curve.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_linear_curve.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.high_degree_planar_surface">ENTITY <b>high_degree_planar_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_geometry">overcomplex_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.high_degree_planar_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_planar_surface.approximation_tolerance">approximation_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_planar_surface.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_planar_surface.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_planar_surface.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_planar_surface.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.high_degree_planar_surface.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inapt_data">ENTITY <b>inapt_data</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.inapt_topology">inapt_topology</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.inapt_geometry">inapt_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">inapt_topology_and_geometry_relationship</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.inapt_manifold_solid_brep">inapt_manifold_solid_brep</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inapt_geometry">ENTITY <b>inapt_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.nearly_degenerate_geometry">nearly_degenerate_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.discontinuous_geometry">discontinuous_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.self_intersecting_geometry">self_intersecting_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.overlapping_geometry">overlapping_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.multiply_defined_geometry">multiply_defined_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_irregularity">geometry_with_local_irregularity</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.overcomplex_geometry">overcomplex_geometry</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_data">inapt_data</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inapt_manifold_solid_brep">ENTITY <b>inapt_manifold_solid_brep</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.partly_overlapping_solids">partly_overlapping_solids</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.small_volume_solid">small_volume_solid</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.multiply_defined_solids">multiply_defined_solids</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.entirely_narrow_solid">entirely_narrow_solid</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.solid_with_excessive_number_of_voids">solid_with_excessive_number_of_voids</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_data">inapt_data</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inapt_topology">ENTITY <b>inapt_topology</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.free_edge">free_edge</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.non_manifold_at_edge">non_manifold_at_edge</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.non_manifold_at_vertex">non_manifold_at_vertex</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.over_used_vertex">over_used_vertex</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_data">inapt_data</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">ENTITY <b>inapt_topology_and_geometry_relationship</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.topology_related_to_nearly_degenerate_geometry">topology_related_to_nearly_degenerate_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.geometric_gap_in_topology">geometric_gap_in_topology</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.non_smooth_geometry_transition_across_edge">non_smooth_geometry_transition_across_edge</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.topology_related_to_self_intersecting_geometry">topology_related_to_self_intersecting_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.steep_geometry_transition_across_edge">steep_geometry_transition_across_edge</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.topology_related_to_overlapping_geometry">topology_related_to_overlapping_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.topology_related_to_multiply_defined_geometry">topology_related_to_multiply_defined_geometry</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.overcomplex_topology_and_geometry_relationship">overcomplex_topology_and_geometry_relationship</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_data">inapt_data</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inconsistent_adjacent_face_normals">ENTITY <b>inconsistent_adjacent_face_normals</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_topology">erroneous_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.inconsistent_adjacent_face_normals.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_adjacent_face_normals.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_adjacent_face_normals.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'CLOSED_OR_OPEN_SHELL_SELECT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_adjacent_face_normals.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_adjacent_face_normals.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code">ENTITY <b>inconsistent_curve_transition_code</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_geometry">erroneous_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code.angle_tolerance">angle_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.plane_angle_measure">plane_angle_measure</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code.curvature_ratio_tolerance">curvature_ratio_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.ratio_measure">ratio_measure</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code.distance_tolerance">distance_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code.flat_curvature_radius_tolerance">flat_curvature_radius_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.COMPOSITE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'COMPOSITE_CURVE_TRANSITION_LOCATOR']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_curve_transition_code.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inconsistent_edge_and_curve_directions">ENTITY <b>inconsistent_edge_and_curve_directions</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_topology_and_geometry_relationship">erroneous_topology_and_geometry_relationship</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.inconsistent_edge_and_curve_directions.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_edge_and_curve_directions.distance_tolerance">distance_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_edge_and_curve_directions.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_edge_and_curve_directions.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_edge_and_curve_directions.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_edge_and_curve_directions.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_closed_shell_normals">ENTITY <b>inconsistent_face_and_closed_shell_normals</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_topology_and_geometry_relationship">erroneous_topology_and_geometry_relationship</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_closed_shell_normals.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_closed_shell_normals.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_closed_shell_normals.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_closed_shell_normals.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_closed_shell_normals.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_surface_normals">ENTITY <b>inconsistent_face_and_surface_normals</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_topology_and_geometry_relationship">erroneous_topology_and_geometry_relationship</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_surface_normals.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_surface_normals.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_surface_normals.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_surface_normals.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_face_and_surface_normals.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code">ENTITY <b>inconsistent_surface_transition_code</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_geometry">erroneous_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code.angle_tolerance">angle_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.plane_angle_measure">plane_angle_measure</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code.curvature_ratio_tolerance">curvature_ratio_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.ratio_measure">ratio_measure</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code.distance_tolerance">distance_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code.flat_curvature_radius_tolerance">flat_curvature_radius_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.RECTANGULAR_COMPOSITE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'RECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.inconsistent_surface_transition_code.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.indistinct_curve_knots">ENTITY <b>indistinct_curve_knots</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.indistinct_curve_knots.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_curve_knots.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PARAMETER_VALUE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_curve_knots.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.PARAMETER_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_curve_knots.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_CURVE_WITH_KNOTS']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_curve_knots.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_CURVE_KNOT_LOCATOR']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_curve_knots.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.indistinct_surface_knots">ENTITY <b>indistinct_surface_knots</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.indistinct_surface_knots.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_surface_knots.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PARAMETER_VALUE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_surface_knots.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.PARAMETER_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_surface_knots.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE_WITH_KNOTS']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_surface_knots.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_SURFACE_KNOT_LOCATOR']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.indistinct_surface_knots.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.intersecting_connected_face_sets">ENTITY <b>intersecting_connected_face_sets</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_self_intersecting_geometry">topology_related_to_self_intersecting_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.intersecting_connected_face_sets.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_connected_face_sets.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_connected_face_sets.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_connected_face_sets.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET',
            'TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_connected_face_sets.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_FACE_SURFACE',
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_connected_face_sets.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.intersecting_loops_in_face">ENTITY <b>intersecting_loops_in_face</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_topology_and_geometry_relationship">erroneous_topology_and_geometry_relationship</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.intersecting_loops_in_face.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_loops_in_face.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_loops_in_face.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_loops_in_face.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_loops_in_face.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE',
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_loops_in_face.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.intersecting_shells_in_solid">ENTITY <b>intersecting_shells_in_solid</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_manifold_solid_brep">erroneous_manifold_solid_brep</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.intersecting_shells_in_solid.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_shells_in_solid.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_shells_in_solid.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_shells_in_solid.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRIC_MODEL_SCHEMA.BREP_WITH_VOIDS']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_shells_in_solid.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.SURFACE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.intersecting_shells_in_solid.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_cartesian_points">ENTITY <b>multiply_defined_cartesian_points</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.multiply_defined_geometry">multiply_defined_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.multiply_defined_cartesian_points.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_cartesian_points.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_cartesian_points.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_cartesian_points.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.CARTESIAN_POINT','GEOMETRY_SCHEMA.CARTESIAN_POINT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_cartesian_points.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_cartesian_points.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_curves">ENTITY <b>multiply_defined_curves</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.multiply_defined_geometry">multiply_defined_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.multiply_defined_curves.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_curves.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_curves.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_curves.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.CURVE','GEOMETRY_SCHEMA.CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_curves.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_curves.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_directions">ENTITY <b>multiply_defined_directions</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.multiply_defined_geometry">multiply_defined_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.multiply_defined_directions.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_directions.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_directions.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.PLANE_ANGLE_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_directions.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.DIRECTION','GEOMETRY_SCHEMA.DIRECTION']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_directions.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_directions.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_edges">ENTITY <b>multiply_defined_edges</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_multiply_defined_geometry">topology_related_to_multiply_defined_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.multiply_defined_edges.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_edges.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_edges.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_edges.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE',
            'TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_edges.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_edges.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_faces">ENTITY <b>multiply_defined_faces</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_multiply_defined_geometry">topology_related_to_multiply_defined_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.multiply_defined_faces.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_faces.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_faces.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_faces.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE',
            'TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_faces.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_faces.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_geometry">ENTITY <b>multiply_defined_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.multiply_defined_curves">multiply_defined_curves</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.multiply_defined_surfaces">multiply_defined_surfaces</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.multiply_defined_cartesian_points">multiply_defined_cartesian_points</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.multiply_defined_directions">multiply_defined_directions</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.multiply_defined_placements">multiply_defined_placements</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_geometry">inapt_geometry</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_placements">ENTITY <b>multiply_defined_placements</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.multiply_defined_geometry">multiply_defined_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.multiply_defined_placements.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_placements.assessment_specification_2">assessment_specification_2 : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_placements.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_placements.wr:wr2">WR2: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(assessment_specification_2\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(assessment_specification_2\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_placements.wr:wr3">WR3: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'PLANE_ANGLE_AND_LENGTH_PAIR');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_placements.wr:wr4">WR4: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.PLACEMENT','GEOMETRY_SCHEMA.PLACEMENT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_placements.wr:wr5">WR5: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_placements.wr:wr6">WR6: validate_accuracy_types(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_placements.wr:wr7">WR7: SIZEOF(QUERY(sdqr &lt;* bag_to_set(USEDIN(SELF,
            'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'DATA_QUALITY_INSPECTION_RESULT.'+
            'CRITERION_INSPECTED'))|
            ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
            IN TYPEOF(sdqr)) AND
            (SIZEOF(QUERY(sdqiir &lt;* bag_to_set(USEDIN(sdqr,
            'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'DATA_QUALITY_INSPECTION_REPORT.'+
            'INSPECTION_RESULT'))|
            ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
            IN TYPEOF(sdqiir)) AND
            (SIZEOF(QUERY(sdqiri &lt;* sdqiir.inspected_instances|
            (TYPEOF(sdqiri.inspected_elements[1])
            &lt;&gt;TYPEOF(sdqiri.inspected_elements[2])))) = 0)
            )) = 0)
            )) = 0;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_solids">ENTITY <b>multiply_defined_solids</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_manifold_solid_brep">inapt_manifold_solid_brep</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.multiply_defined_solids.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_solids.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_solids.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_solids.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRIC_MODEL_SCHEMA.MANIFOLD_SOLID_BREP',
            'GEOMETRIC_MODEL_SCHEMA.MANIFOLD_SOLID_BREP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_solids.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_solids.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_surfaces">ENTITY <b>multiply_defined_surfaces</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.multiply_defined_geometry">multiply_defined_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.multiply_defined_surfaces.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_surfaces.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND
            ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_surfaces.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_surfaces.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.SURFACE','GEOMETRY_SCHEMA.SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_surfaces.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_surfaces.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.multiply_defined_vertices">ENTITY <b>multiply_defined_vertices</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_multiply_defined_geometry">topology_related_to_multiply_defined_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.multiply_defined_vertices.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_vertices.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND
            ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_vertices.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_vertices.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.VERTEX_POINT',
            'TOPOLOGY_SCHEMA.VERTEX_POINT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_vertices.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.multiply_defined_vertices.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.narrow_surface_patch">ENTITY <b>narrow_surface_patch</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.narrow_surface_patch.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.narrow_surface_patch.width_tolerance">width_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.narrow_surface_patch.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.narrow_surface_patch.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.narrow_surface_patch.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_SURFACE_PATCH']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.narrow_surface_patch.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.nearly_degenerate_geometry">ENTITY <b>nearly_degenerate_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.small_area_surface">small_area_surface</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.short_length_curve">short_length_curve</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.entirely_narrow_surface">entirely_narrow_surface</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_geometry">inapt_geometry</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_boundary">ENTITY <b>nearly_degenerate_surface_boundary</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_boundary.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_boundary.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_VALUE_RANGE'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_boundary.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_boundary.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_boundary.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'BOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_boundary.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_patch">ENTITY <b>nearly_degenerate_surface_patch</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_patch.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_patch.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_VALUE_RANGE'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_patch.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_patch.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_patch.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_SURFACE_PATCH']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.nearly_degenerate_surface_patch.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.non_manifold_at_edge">ENTITY <b>non_manifold_at_edge</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology">inapt_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.non_manifold_at_edge.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.non_manifold_at_edge.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.non_manifold_at_edge.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.non_manifold_at_edge.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.non_manifold_at_edge.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.non_manifold_at_vertex">ENTITY <b>non_manifold_at_vertex</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology">inapt_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.non_manifold_at_vertex.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.non_manifold_at_vertex.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.non_manifold_at_vertex.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.non_manifold_at_vertex.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.VERTEX_POINT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.non_manifold_at_vertex.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.non_smooth_geometry_transition_across_edge">ENTITY <b>non_smooth_geometry_transition_across_edge</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.g1_discontinuity_between_adjacent_faces">g1_discontinuity_between_adjacent_faces</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.g2_discontinuity_between_adjacent_faces">g2_discontinuity_between_adjacent_faces</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">inapt_topology_and_geometry_relationship</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.open_closed_shell">ENTITY <b>open_closed_shell</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_topology">erroneous_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.open_closed_shell.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.open_closed_shell.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.open_closed_shell.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CLOSED_SHELL']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.open_closed_shell.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.open_closed_shell.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.open_edge_loop">ENTITY <b>open_edge_loop</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_topology">erroneous_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.open_edge_loop.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.open_edge_loop.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.open_edge_loop.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_LOOP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.open_edge_loop.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.ORIENTED_EDGE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.open_edge_loop.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.over_used_vertex">ENTITY <b>over_used_vertex</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology">inapt_topology</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.over_used_vertex.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.over_used_vertex.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.over_used_vertex.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.over_used_vertex.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.VERTEX_POINT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.over_used_vertex.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.over_used_vertex.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.overcomplex_geometry">ENTITY <b>overcomplex_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.excessively_high_degree_curve">excessively_high_degree_curve</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.excessively_high_degree_surface">excessively_high_degree_surface</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.surface_with_excessive_patches_in_one_direction">surface_with_excessive_patches_in_one_direction</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.curve_with_excessive_segments">curve_with_excessive_segments</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.high_degree_linear_curve">high_degree_linear_curve</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.high_degree_planar_surface">high_degree_planar_surface</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.high_degree_conic">high_degree_conic</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.high_degree_axi_symmetric_surface">high_degree_axi_symmetric_surface</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_geometry">inapt_geometry</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.overcomplex_topology_and_geometry_relationship">ENTITY <b>overcomplex_topology_and_geometry_relationship</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.unused_patches">unused_patches</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.edge_with_excessive_segments">edge_with_excessive_segments</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.face_surface_with_excessive_patches_in_one_direction">face_surface_with_excessive_patches_in_one_direction</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">inapt_topology_and_geometry_relationship</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.overlapping_geometry">ENTITY <b>overlapping_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.partly_overlapping_curves">partly_overlapping_curves</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.partly_overlapping_surfaces">partly_overlapping_surfaces</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_geometry">inapt_geometry</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.partly_overlapping_curves">ENTITY <b>partly_overlapping_curves</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overlapping_geometry">overlapping_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.partly_overlapping_curves.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_curves.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_curves.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_curves.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_curves.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.CURVE','GEOMETRY_SCHEMA.CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_curves.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.TRIMMED_CURVE','GEOMETRY_SCHEMA.TRIMMED_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_curves.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.partly_overlapping_edges">ENTITY <b>partly_overlapping_edges</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_overlapping_geometry">topology_related_to_overlapping_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.partly_overlapping_edges.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_edges.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_edges.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_edges.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_edges.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE',
            'TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_edges.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.SUBEDGE','TOPOLOGY_SCHEMA.SUBEDGE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_edges.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.partly_overlapping_faces">ENTITY <b>partly_overlapping_faces</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_overlapping_geometry">topology_related_to_overlapping_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.partly_overlapping_faces.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_faces.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_faces.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.AREA_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_faces.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.AREA_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_faces.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE',
            'TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_faces.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.SUBFACE','TOPOLOGY_SCHEMA.SUBFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_faces.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.AREA_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.partly_overlapping_solids">ENTITY <b>partly_overlapping_solids</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_manifold_solid_brep">inapt_manifold_solid_brep</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.partly_overlapping_solids.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_solids.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_solids.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.AREA_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_solids.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.AREA_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_solids.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRIC_MODEL_SCHEMA.MANIFOLD_SOLID_BREP',
            'GEOMETRIC_MODEL_SCHEMA.MANIFOLD_SOLID_BREP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_solids.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.SUBFACE','TOPOLOGY_SCHEMA.SUBFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_solids.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.AREA_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.partly_overlapping_surfaces">ENTITY <b>partly_overlapping_surfaces</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overlapping_geometry">overlapping_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.partly_overlapping_surfaces.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_surfaces.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_surfaces.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.AREA_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_surfaces.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.AREA_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_surfaces.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.SURFACE','GEOMETRY_SCHEMA.SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_surfaces.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.CURVE_BOUNDED_SURFACE',
            'GEOMETRY_SCHEMA.CURVE_BOUNDED_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.partly_overlapping_surfaces.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.AREA_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.self_intersecting_curve">ENTITY <b>self_intersecting_curve</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.self_intersecting_geometry">self_intersecting_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.self_intersecting_curve.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_curve.arc_length_separation_factor">arc_length_separation_factor : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_curve.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_curve.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_curve.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_curve.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.POINT_ON_CURVE','GEOMETRY_SCHEMA.POINT_ON_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_curve.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.self_intersecting_geometry">ENTITY <b>self_intersecting_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.self_intersecting_curve">self_intersecting_curve</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.self_intersecting_surface">self_intersecting_surface</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_geometry">inapt_geometry</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.self_intersecting_loop">ENTITY <b>self_intersecting_loop</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_self_intersecting_geometry">topology_related_to_self_intersecting_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.self_intersecting_loop.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_loop.arc_length_distance_factor">arc_length_distance_factor : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_loop.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_loop.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_loop.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_LOOP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_loop.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE',
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_loop.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.self_intersecting_shell">ENTITY <b>self_intersecting_shell</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_self_intersecting_geometry">topology_related_to_self_intersecting_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.self_intersecting_shell.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_shell.geodesic_separation_factor">geodesic_separation_factor : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_shell.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_shell.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_shell.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_shell.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_FACE_SURFACE',
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_shell.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.self_intersecting_surface">ENTITY <b>self_intersecting_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.self_intersecting_geometry">self_intersecting_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.self_intersecting_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_surface.geodesic_separation_factor">geodesic_separation_factor : </A>REAL;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_surface.interference_tolerance">interference_tolerance : </A><A HREF="../../../data/resources/measure_schema/measure_schema.htm#measure_schema.length_measure">length_measure</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_surface.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_surface.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_surface.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.POINT_ON_SURFACE',
            'GEOMETRY_SCHEMA.POINT_ON_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.self_intersecting_surface.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_criteria_representation_with_accuracy">ENTITY <b>shape_criteria_representation_with_accuracy</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_criteria_representation">shape_data_quality_criteria_representation</A>);<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_criteria_representation_with_accuracy.required_general_accuracy">required_general_accuracy : </A>SET[1:?] OF <A HREF="#shape_data_quality_criteria_schema.shape_measurement_accuracy">shape_measurement_accuracy</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">ENTITY <b>shape_data_quality_assessment_by_logical_test</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../data/resources/product_data_quality_criteria_schema/product_data_quality_criteria_schema.htm#product_data_quality_criteria_schema.data_quality_assessment_specification">data_quality_assessment_specification</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">ENTITY <b>shape_data_quality_assessment_by_numerical_test</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../data/resources/product_data_quality_criteria_schema/product_data_quality_criteria_schema.htm#product_data_quality_criteria_schema.data_quality_assessment_specification">data_quality_assessment_specification</A>);<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test.threshold">threshold : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_value_limit_type_select">shape_data_quality_value_limit_type_select</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_criteria_representation">ENTITY <b>shape_data_quality_criteria_representation</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../data/resources/product_data_quality_criteria_schema/product_data_quality_criteria_schema.htm#product_data_quality_criteria_schema.data_quality_criteria_representation">data_quality_criteria_representation</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_criteria_representation.wr:wr1">WR1: SIZEOF( QUERY( q &lt;* SELF\representation.items|
            'SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_CRITERION' IN TYPEOF(q))) &gt; 0;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_criterion">ENTITY <b>shape_data_quality_criterion</b></A><br>
         &nbsp;&nbsp;SUPERTYPE OF 
         (ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.erroneous_data">erroneous_data</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.inapt_data">inapt_data</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../data/resources/product_data_quality_criteria_schema/product_data_quality_criteria_schema.htm#product_data_quality_criteria_schema.data_quality_criterion">data_quality_criterion</A>, <A HREF="../../../data/resources/product_data_quality_criteria_schema/product_data_quality_criteria_schema.htm#product_data_quality_criteria_schema.data_quality_measurement_requirement">data_quality_measurement_requirement</A>);<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_criterion.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_specification_select">shape_data_quality_assessment_specification_select</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_criterion.wr:wr1">WR1: SIZEOF(USEDIN(SELF,
            'PRODUCT_DATA_QUALITY_CRITERIA_SCHEMA.'+
            'DATA_QUALITY_CRITERION_ASSESSMENT_ASSOCIATION.'+
            'CRITERION'
            )) = 0;</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_criterion.wr:wr2">WR2: SIZEOF(QUERY(i1&lt;*bag_to_set(
            USEDIN(SELF,
            'REPRESENTATION_SCHEMA.'+
            'REPRESENTATION_ITEM_RELATIONSHIP.'+
            'RELATED_REPRESENTATION_ITEM'))|
            'PRODUCT_DATA_QUALITY_CRITERIA_SCHEMA.'+
            'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION'
            IN TYPEOF(i1))) = 0;</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_criterion.wr:wr3">WR3: SIZEOF(QUERY(i1&lt;*bag_to_set(
            USEDIN(SELF,
            'REPRESENTATION_SCHEMA.'+
            'REPRESENTATION_ITEM_RELATIONSHIP.'+
            'RELATING_REPRESENTATION_ITEM'))|
            'PRODUCT_DATA_QUALITY_CRITERIA_SCHEMA.'+
            'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION'
            IN TYPEOF(i1))) = 0;</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_criterion_and_accuracy_association">ENTITY <b>shape_data_quality_criterion_and_accuracy_association</b></A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_criterion_and_accuracy_association.required_specific_accuracy">required_specific_accuracy : </A><A HREF="#shape_data_quality_criteria_schema.shape_measurement_accuracy">shape_measurement_accuracy</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_criterion_and_accuracy_association.shape_data_quality_criterion">shape_data_quality_criterion : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_lower_value_limit">ENTITY <b>shape_data_quality_lower_value_limit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_value_limit">shape_data_quality_value_limit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_lower_value_limit.wr:wr1">WR1: SELF\qualified_representation_item.qualifiers[1].name = 'minimum';</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_upper_value_limit">ENTITY <b>shape_data_quality_upper_value_limit</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_value_limit">shape_data_quality_value_limit</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_upper_value_limit.wr:wr1">WR1: SELF\qualified_representation_item.qualifiers[1].name = 'maximum';</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_value_limit">ENTITY <b>shape_data_quality_value_limit</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_upper_value_limit">shape_data_quality_upper_value_limit</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.shape_data_quality_lower_value_limit">shape_data_quality_lower_value_limit</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../data/resources/qualified_measure_schema/qualified_measure_schema.htm#qualified_measure_schema.measure_representation_item">measure_representation_item</A>, <A HREF="../../../data/resources/qualified_measure_schema/qualified_measure_schema.htm#qualified_measure_schema.qualified_representation_item">qualified_representation_item</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_data_quality_value_range">ENTITY <b>shape_data_quality_value_range</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../data/resources/representation_schema/representation_schema.htm#representation_schema.compound_representation_item">compound_representation_item</A>);<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_value_range.wr:wr1">WR1: ('REPRESENTATION_SCHEMA.SET_REPRESENTATION_ITEM'
            IN TYPEOF (SELF\compound_representation_item.item_element)) AND
            ((SIZEOF(SELF\compound_representation_item.item_element) = 2) AND 
            ((SIZEOF(QUERY (i1 &lt;* SELF\compound_representation_item.item_element | 
            ('QUALIFIED_MEASURE_SCHEMA.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i1)))) = 2)
            OR (SIZEOF(QUERY (i2 &lt;* SELF\compound_representation_item.item_element | 
            ('REPRESENTATION_SCHEMA.VALUE_REPRESENTATION_ITEM' IN TYPEOF(i2)))) = 2)));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_value_range.wr:wr2">WR2: (SIZEOF(QUERY (i &lt;* SELF\compound_representation_item.item_element
            | (i.name = 'upper limit'))) = 1)
            AND (SIZEOF(QUERY (i &lt;* SELF\compound_representation_item.item_element
            | (i.name = 'lower limit'))) = 1);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_data_quality_value_range.wr:wr3">WR3: (SIZEOF(QUERY(i1 &lt;* SELF\compound_representation_item.item_element |
            ('QUALIFIED_MEASURE_SCHEMA.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i1)) AND
            (SIZEOF (QUERY (i2 &lt;* SELF\compound_representation_item.item_element |
            ('QUALIFIED_MEASURE_SCHEMA.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i2)) AND
            (i1 :&lt;&gt;: i2) AND 
            (i1\measure_with_unit.unit_component :=: i2\measure_with_unit.unit_component))) = 1))) = 2)
            OR
            (SIZEOF(QUERY(i1 &lt;* SELF\compound_representation_item.item_element |
            ('REPRESENTATION_SCHEMA.VALUE_REPRESENTATION_ITEM' IN TYPEOF (i1)) AND
            (SIZEOF (QUERY (i2 &lt;* SELF\compound_representation_item.item_element |
            ('REPRESENTATION_SCHEMA.VALUE_REPRESENTATION_ITEM' IN TYPEOF (i2)) AND
            (i1 :&lt;&gt;: i2) AND 
            (TYPEOF(i1\value_representation_item.value_component) =
            TYPEOF(i2\value_representation_item.value_component)))
            ) = 1))) = 2);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_measurement_accuracy">ENTITY <b>shape_measurement_accuracy</b></A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_measurement_accuracy.description">description : </A><A HREF="../../../data/resources/support_resource_schema/support_resource_schema.htm#support_resource_schema.text">text</A>;<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.shape_measurement_accuracy.range">range : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_value_limit_type_select">shape_data_quality_value_limit_type_select</A>;<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.shape_summary_request_with_representative_value">ENTITY <b>shape_summary_request_with_representative_value</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="../../../data/resources/product_data_quality_criteria_schema/product_data_quality_criteria_schema.htm#product_data_quality_criteria_schema.summary_report_request">summary_report_request</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.short_length_curve">ENTITY <b>short_length_curve</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.nearly_degenerate_geometry">nearly_degenerate_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.short_length_curve.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.short_length_curve_segment">ENTITY <b>short_length_curve_segment</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.short_length_curve_segment.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve_segment.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve_segment.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve_segment.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve_segment.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_CURVE_SEGMENT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_curve_segment.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.short_length_edge">ENTITY <b>short_length_edge</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_nearly_degenerate_geometry">topology_related_to_nearly_degenerate_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.short_length_edge.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_edge.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_edge.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_edge.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_edge.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.short_length_edge.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.small_area_face">ENTITY <b>small_area_face</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.topology_related_to_nearly_degenerate_geometry">topology_related_to_nearly_degenerate_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.small_area_face.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_face.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.AREA_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_face.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.AREA_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_face.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_face.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_face.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.AREA_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.small_area_surface">ENTITY <b>small_area_surface</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.nearly_degenerate_geometry">nearly_degenerate_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.small_area_surface.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.AREA_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.AREA_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.AREA_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.small_area_surface_patch">ENTITY <b>small_area_surface_patch</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.small_area_surface_patch.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface_patch.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.AREA_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface_patch.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.AREA_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface_patch.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.B_SPLINE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface_patch.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_SURFACE_PATCH']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_area_surface_patch.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.AREA_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.small_volume_solid">ENTITY <b>small_volume_solid</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_manifold_solid_brep">inapt_manifold_solid_brep</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.small_volume_solid.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_volume_solid.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.VOLUME_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_volume_solid.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.VOLUME_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_volume_solid.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRIC_MODEL_SCHEMA.MANIFOLD_SOLID_BREP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_volume_solid.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.small_volume_solid.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.VOLUME_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.solid_with_excessive_number_of_voids">ENTITY <b>solid_with_excessive_number_of_voids</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_manifold_solid_brep">inapt_manifold_solid_brep</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.solid_with_excessive_number_of_voids.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.solid_with_excessive_number_of_voids.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.solid_with_excessive_number_of_voids.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.solid_with_excessive_number_of_voids.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRIC_MODEL_SCHEMA.MANIFOLD_SOLID_BREP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.solid_with_excessive_number_of_voids.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.solid_with_excessive_number_of_voids.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.solid_with_wrong_number_of_voids">ENTITY <b>solid_with_wrong_number_of_voids</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_manifold_solid_brep">erroneous_manifold_solid_brep</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.solid_with_wrong_number_of_voids.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.solid_with_wrong_number_of_voids.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.solid_with_wrong_number_of_voids.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRIC_MODEL_SCHEMA.BREP_WITH_VOIDS']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.solid_with_wrong_number_of_voids.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.solid_with_wrong_number_of_voids.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_edges">ENTITY <b>steep_angle_between_adjacent_edges</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.steep_geometry_transition_across_edge">steep_geometry_transition_across_edge</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_edges.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_edges.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_edges.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.PLANE_ANGLE_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_edges.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.EDGE_LOOP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_edges.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.ORIENTED_EDGE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_edges.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.PLANE_ANGLE_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_faces">ENTITY <b>steep_angle_between_adjacent_faces</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.steep_geometry_transition_across_edge">steep_geometry_transition_across_edge</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_faces.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_faces.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_faces.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.PLANE_ANGLE_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_faces.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.CONNECTED_FACE_SET']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_faces.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'POINT_ON_EDGE_CURVE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.steep_angle_between_adjacent_faces.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.PLANE_ANGLE_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.steep_geometry_transition_across_edge">ENTITY <b>steep_geometry_transition_across_edge</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.steep_angle_between_adjacent_edges">steep_angle_between_adjacent_edges</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.steep_angle_between_adjacent_faces">steep_angle_between_adjacent_faces</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">inapt_topology_and_geometry_relationship</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.surface_with_excessive_patches_in_one_direction">ENTITY <b>surface_with_excessive_patches_in_one_direction</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_geometry">overcomplex_geometry</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.surface_with_excessive_patches_in_one_direction.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_excessive_patches_in_one_direction.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_excessive_patches_in_one_direction.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_excessive_patches_in_one_direction.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_excessive_patches_in_one_direction.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            []);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_excessive_patches_in_one_direction.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.surface_with_small_curvature_radius">ENTITY <b>surface_with_small_curvature_radius</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_near_degeneracy">geometry_with_local_near_degeneracy</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.surface_with_small_curvature_radius.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_small_curvature_radius.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.LENGTH_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_small_curvature_radius.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.LENGTH_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_small_curvature_radius.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_small_curvature_radius.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.POINT_ON_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.surface_with_small_curvature_radius.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.topology_related_to_multiply_defined_geometry">ENTITY <b>topology_related_to_multiply_defined_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.multiply_defined_faces">multiply_defined_faces</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.multiply_defined_vertices">multiply_defined_vertices</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.multiply_defined_edges">multiply_defined_edges</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">inapt_topology_and_geometry_relationship</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.topology_related_to_nearly_degenerate_geometry">ENTITY <b>topology_related_to_nearly_degenerate_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.short_length_edge">short_length_edge</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.small_area_face">small_area_face</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.entirely_narrow_face">entirely_narrow_face</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">inapt_topology_and_geometry_relationship</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.topology_related_to_overlapping_geometry">ENTITY <b>topology_related_to_overlapping_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.partly_overlapping_faces">partly_overlapping_faces</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.partly_overlapping_edges">partly_overlapping_edges</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">inapt_topology_and_geometry_relationship</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.topology_related_to_self_intersecting_geometry">ENTITY <b>topology_related_to_self_intersecting_geometry</b></A><br>
         &nbsp;&nbsp;ABSTRACT SUPERTYPE
         
         OF&nbsp;(ONEOF&nbsp;(<A HREF="#shape_data_quality_criteria_schema.self_intersecting_loop">self_intersecting_loop</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.self_intersecting_shell">self_intersecting_shell</A>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="#shape_data_quality_criteria_schema.intersecting_connected_face_sets">intersecting_connected_face_sets</A>))<br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.inapt_topology_and_geometry_relationship">inapt_topology_and_geometry_relationship</A>);<br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.unused_patches">ENTITY <b>unused_patches</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.overcomplex_topology_and_geometry_relationship">overcomplex_topology_and_geometry_relationship</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.unused_patches.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.unused_patches.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.COUNT_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.unused_patches.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.COUNT_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.unused_patches.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.unused_patches.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
            'B_SPLINE_SURFACE_STRIP']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.unused_patches.wr:wr5">WR5: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.wrongly_oriented_void">ENTITY <b>wrongly_oriented_void</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_manifold_solid_brep">erroneous_manifold_solid_brep</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.wrongly_oriented_void.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_oriented_void.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_oriented_void.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRIC_MODEL_SCHEMA.BREP_WITH_VOIDS']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_oriented_void.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.ORIENTED_CLOSED_SHELL']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_oriented_void.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.wrongly_placed_loop">ENTITY <b>wrongly_placed_loop</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_topology_and_geometry_relationship">erroneous_topology_and_geometry_relationship</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.wrongly_placed_loop.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_placed_loop.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_placed_loop.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_placed_loop.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.FACE_BOUND']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_placed_loop.wr:wr4">WR4: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.LENGTH_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.wrongly_placed_void">ENTITY <b>wrongly_placed_void</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.erroneous_manifold_solid_brep">erroneous_manifold_solid_brep</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.wrongly_placed_void.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_logical_test">shape_data_quality_assessment_by_logical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_placed_void.wr:wr1">WR1: validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.BOOLEAN_VALUE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_placed_void.wr:wr2">WR2: validate_inspected_elements_type(SELF,
            ['GEOMETRIC_MODEL_SCHEMA.BREP_WITH_VOIDS']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_placed_void.wr:wr3">WR3: validate_locations_of_extreme_value_type(SELF,
            ['TOPOLOGY_SCHEMA.ORIENTED_CLOSED_SHELL']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.wrongly_placed_void.wr:wr4">WR4: validate_accuracy_types(SELF,
            []);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.zero_surface_normal">ENTITY <b>zero_surface_normal</b></A><br>
         &nbsp;&nbsp;SUBTYPE OF (<A HREF="#shape_data_quality_criteria_schema.geometry_with_local_irregularity">geometry_with_local_irregularity</A>);<br>
         &nbsp;&nbsp;SELF\<A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>.<A NAME="shape_data_quality_criteria_schema.zero_surface_normal.assessment_specification">assessment_specification : </A><A HREF="#shape_data_quality_criteria_schema.shape_data_quality_assessment_by_numerical_test">shape_data_quality_assessment_by_numerical_test</A>;<br>WHERE<br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.zero_surface_normal.wr:wr1">WR1: ('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('MEASURE_SCHEMA.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold));</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.zero_surface_normal.wr:wr2">WR2: validate_measured_data_type(SELF,
            'MEASURE_SCHEMA.PLANE_ANGLE_MEASURE');</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.zero_surface_normal.wr:wr3">WR3: validate_inspected_elements_type(SELF,
            ['GEOMETRY_SCHEMA.SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.zero_surface_normal.wr:wr4">WR4: validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRY_SCHEMA.POINT_ON_SURFACE']);</A><br>
         &nbsp;&nbsp;<A NAME="shape_data_quality_criteria_schema.zero_surface_normal.wr:wr5">WR5: validate_accuracy_types(SELF,
            ['MEASURE_SCHEMA.PLANE_ANGLE_MEASURE']);</A><br>
         
         END_ENTITY;<br></code><code><br><A NAME="shape_data_quality_criteria_schema.validate_accuracy_types">FUNCTION <b>validate_accuracy_types</b></A><br>&nbsp;(ei : <A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>; type_list : BAG[0:?] OF STRING) : LOGICAL;
         </code><pre>LOCAL
       sdqca: BAG OF
        SHAPE_DATA_QUALITY_CRITERION_AND_ACCURACY_ASSOCIATION:=[];
       sma: BAG OF SHAPE_MEASUREMENT_ACCURACY:=[];
       sdqir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
       scraa: BAG OF
        SHAPE_INSPECTION_RESULT_ACCURACY_ASSOCIATION:=[];
       t_logic:BOOLEAN;
     END_LOCAL;
     -- STEP-1
     -- collect types of range attribute of shape_measurement_accuracy
     -- referred from shape_data_quality_criterion_and_accuracy_association 
     -- that refers to given shape_data_quality_criterion.
     sdqca := USEDIN(ei,
               'SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.'+
               'SHAPE_DATA_QUALITY_CRITERION_AND_ACCURACY_ASSOCIATION.'+
               'SHAPE_DATA_QUALITY_CRITERION');
     IF(SIZEOF(sdqca) &lt;&gt; 0) THEN
       REPEAT i:= 1 TO SIZEOF(sdqca);
         sma := sma + sdqca[i].required_specific_accuracy;
       END_REPEAT;
  
       -- STEP-2
       -- check whether the collected types include all the type names
       -- in the type list given as an input argument of this function
       -- and they do not include any other type names. 
       IF(SIZEOF(type_list) &lt; SIZEOF(sma)) THEN
         RETURN(FALSE);
       END_IF;
  
       REPEAT i:= 1 TO SIZEOF(sma);
         t_logic := FALSE;
         REPEAT j:= 1 TO SIZEOF(type_list);
           IF(type_list[j] IN value_limit_type(sma[i].range)) THEN
             t_logic := TRUE;
             ESCAPE;
           END_IF;
         END_REPEAT;
         IF(NOT(t_logic)) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    END_IF;
  
     -- STEP-3
     -- collect types of range attribute of shape_measurement_accuracy
     -- referred from shape_inspection_result_accuracy_association
     -- that refers to shape_data_quality_inspection_result
     -- for the given shape_data_quality_criterion.
     sdqir := QUERY(q &lt;* bag_to_set(USEDIN(ei,
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
                   'DATA_QUALITY_INSPECTION_RESULT.'+
                   'CRITERION_INSPECTED'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
            IN TYPEOF(q));
     IF(SIZEOF(sdqir) = 0) THEN
       RETURN(TRUE);
     END_IF;
  
     REPEAT i:= 1 TO SIZEOF(sdqir);
       scraa := USEDIN(sdqir[i],
               'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
               'SHAPE_INSPECTION_RESULT_ACCURACY_ASSOCIATION.'+
               'SHAPE_DATA_QUALITY_RESULT');
       IF(SIZEOF(scraa) &lt;&gt; 0) THEN
         sma := [];
         REPEAT j:= 1 TO SIZEOF(scraa);
           sma := sma + scraa[j].applied_specific_accuracy;
         END_REPEAT;
  
         -- STEP-4
         -- check whether the collected types include all the type
         -- names in the type list given as an input argument of
         -- this function and they do not include any other type names.
         IF(SIZEOF(type_list) &lt; SIZEOF(sma)) THEN
           RETURN(FALSE);
         END_IF;
  
         REPEAT j:= 1 TO SIZEOF(sma);
           t_logic := FALSE;
           REPEAT k:= 1 TO SIZEOF(type_list);
             IF(type_list[k] IN value_limit_type(sma[j].range)) THEN
               t_logic := TRUE;
               ESCAPE;
             END_IF;
           END_REPEAT;
           IF(NOT(t_logic)) THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_IF;
     END_REPEAT;
  
     RETURN(TRUE);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="shape_data_quality_criteria_schema.validate_inspected_elements_type">FUNCTION <b>validate_inspected_elements_type</b></A><br>&nbsp;(ei : <A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>; type_list : BAG[0:?] OF STRING) : LOGICAL;
         </code><pre>LOCAL
       sdqir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
       sdir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
       sdiri: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM:=[];
       t_type_list:BAG OF STRING:=[];
     END_LOCAL;
  
     -- STEP-1
     -- collect all shape_data_quality_inspection_instance_report_item
     -- instances associated with the given shape_data_quality_criterion
     -- via shape_data_quality_inspection_result and
     -- shape_data_quality_inspection_instance_report

     sdqir := QUERY(q &lt;* bag_to_set(USEDIN(ei,
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
                   'DATA_QUALITY_INSPECTION_RESULT.'+
                   'CRITERION_INSPECTED'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
            IN TYPEOF(q));
     IF(SIZEOF(sdqir) = 0) THEN
       RETURN(TRUE);
     END_IF;
     REPEAT i:= 1 TO SIZEOF(sdqir);
       sdir := sdir + QUERY(q &lt;* bag_to_set(USEDIN(sdqir[i],
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
                   'DATA_QUALITY_INSPECTION_REPORT.'+
                   'INSPECTION_RESULT'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
            IN TYPEOF(q));
     END_REPEAT;
     IF(SIZEOF(sdir) = 0) THEN
       RETURN(TRUE);
     END_IF;

     REPEAT i:= 1 TO SIZEOF(sdir);
       sdiri := sdiri + QUERY(q &lt;* sdir[i].inspected_instances|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
            IN TYPEOF(q));
     END_REPEAT;

     -- STEP-2
     -- check if the types of inspected_elements of the collected
     -- instances are exactly coincident with the type names in the 
     -- type list given as an input argument of this function.

     -- If there is no instance_report_item, then return true.
     IF(SIZEOF(sdiri) = 0) THEN
       RETURN(TRUE);
     END_IF;
  
     -- When reports exist, then perform the following checking process.
     REPEAT i:= 1 TO SIZEOF(sdiri);
       -- If the size of inspected_elements is not equal to the size of
       -- type_list, then return false.
       IF(SIZEOF(sdiri[i].inspected_elements) &lt;&gt; 
          SIZEOF(type_list)) THEN
         RETURN(FALSE);
       END_IF;
       -- check all elements in the type_list 
       -- for each element of inspected_elements.
       t_type_list := type_list;
       REPEAT j:= 1 TO SIZEOF(sdiri[i].inspected_elements);
         REPEAT k:= 1 TO SIZEOF(t_type_list);
           IF(t_type_list[k] IN
              TYPEOF(sdiri[i].inspected_elements[j])) THEN
            t_type_list := t_type_list - t_type_list[k];
            ESCAPE;
           END_IF;
         END_REPEAT;
       END_REPEAT;
       IF(SIZEOF(t_type_list) &gt; 0) THEN
         RETURN(FALSE);
       END_IF;
     END_REPEAT;
  
    RETURN(TRUE);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="shape_data_quality_criteria_schema.validate_locations_of_extreme_value_type">FUNCTION <b>validate_locations_of_extreme_value_type</b></A><br>&nbsp;(ei : <A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>; type_list : BAG[0:?] OF STRING) : LOGICAL;
         </code><pre>LOCAL
       sdqir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
       sdir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
       sdei: SET OF
        INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES:=[];
       t_type_list:BAG OF STRING:=[];
     END_LOCAL;
  
     -- STEP-1
     -- collect all instance_report_item_with_extreme_instances instances
     -- associated with the given shape_data_quality_criterion
     -- via shape_data_quality_inspection_result and
     -- shape_data_quality_inspection_instance_report.

     sdqir := QUERY(q &lt;* bag_to_set(USEDIN(ei,
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
                   'DATA_QUALITY_INSPECTION_RESULT.'+
                   'CRITERION_INSPECTED'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
            IN TYPEOF(q));
     IF(SIZEOF(sdqir) = 0) THEN
       RETURN(TRUE);
     END_IF;
     REPEAT i:= 1 TO SIZEOF(sdqir);
       sdir := sdir + QUERY(q &lt;* bag_to_set(USEDIN(sdqir[i],
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
                   'DATA_QUALITY_INSPECTION_REPORT.'+
                   'INSPECTION_RESULT'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
            IN TYPEOF(q));
     END_REPEAT;
     REPEAT i:= 1 TO SIZEOF(sdir);
       sdei := sdei + QUERY(q &lt;* sdir[i].inspected_instances|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES'
            IN TYPEOF(q));
     END_REPEAT;
  
     -- STEP-2
     -- check if the types of locations_of_extreme_value attributes
     -- of all extreme_instances attributes of the collected instances are 
     -- exactly coincident with the type names in the type list given as an 
     -- input argument of this function. 

     -- If there is no instance report, then return true.
     IF(SIZEOF(sdei) = 0) THEN
       RETURN(TRUE);
     END_IF;
  
     -- If the type_list is empty and 
     -- instance_report_item_with_extreme_instances exists, then return false.
     IF((SIZEOF(type_list) = 0) AND (SIZEOF(sdei) &lt;&gt; 0)) THEN
       RETURN(FALSE);
     END_IF;
  
     -- When report_items exist, then perform the following checking process.
     REPEAT i:= 1 TO SIZEOF(sdei);
       REPEAT j:= 1 TO SIZEOF(sdei[i].extreme_instances);
         -- If the size of locations_of_extreme_value is not equal to
         -- the size of type_list, then return false.
         IF(SIZEOF(sdei[i].extreme_instances[j].
                           locations_of_extreme_value) &lt;&gt;
            SIZEOF(type_list)) THEN
            RETURN(FALSE);
         END_IF;
         t_type_list := type_list;
         -- check all elements of the type_list 
         --  for each element of locations_of_extreme_value.
         REPEAT k:= 1 TO SIZEOF(sdei[i].extreme_instances[j]
                                  .locations_of_extreme_value);
           REPEAT l:= 1 TO SIZEOF(t_type_list);
             IF(t_type_list[l] IN
               TYPEOF(sdei[i].extreme_instances[j].
                       locations_of_extreme_value[k])) THEN
               t_type_list := t_type_list - t_type_list[l];
               ESCAPE;
             END_IF;
           END_REPEAT;
         END_REPEAT;
         IF(SIZEOF(t_type_list) &gt; 0) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
     END_REPEAT;
  
     RETURN(TRUE);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="shape_data_quality_criteria_schema.validate_measured_data_type">FUNCTION <b>validate_measured_data_type</b></A><br>&nbsp;(ei : <A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_criterion">shape_data_quality_criterion</A>; type_string : STRING) : LOGICAL;
         </code><pre>LOCAL
       sdqir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
       sdcr: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_CRITERION_REPORT:=[];
       sdir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
       sdii: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM:=[];
       sdei: BAG OF
        INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES:=[];
     END_LOCAL;
  
     -- STEP-1
     -- collect all shape_data_quality_inspection_criterion_report instances,
     -- all shape_data_quality_inspection_instance_report_item instances, and
     -- instance_report_item_with_extreme_instances instances
     -- associated with the given shape_data_quality_criterion
     -- via shape_data_quality_inspection_result.
  
     sdqir := QUERY(q &lt;* bag_to_set(USEDIN(ei,
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
                   'DATA_QUALITY_INSPECTION_RESULT.'+
                   'CRITERION_INSPECTED'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
            IN TYPEOF(q));
     IF(SIZEOF(sdqir) = 0) THEN
       RETURN(TRUE);
     END_IF;
     REPEAT i:= 1 TO SIZEOF(sdqir);
       sdcr := sdcr + QUERY(q &lt;* bag_to_set(USEDIN(sdqir[i],
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
                   'DATA_QUALITY_INSPECTION_REPORT.'+
                   'INSPECTION_RESULT'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_CRITERION_REPORT'
            IN TYPEOF(q));
     END_REPEAT;
     REPEAT i:= 1 TO SIZEOF(sdqir);
       sdir := sdir + QUERY(q &lt;* bag_to_set(USEDIN(sdqir[i],
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
                   'DATA_QUALITY_INSPECTION_REPORT.'+
                   'INSPECTION_RESULT'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
            IN TYPEOF(q));
     END_REPEAT;
  
     -- If there is no report, then return true.
     IF((SIZEOF(sdcr) = 0) AND (SIZEOF(sdir) = 0)) THEN
       RETURN(TRUE);
     END_IF;
  
     REPEAT i:= 1 TO SIZEOF(sdir);
       sdii := sdii + QUERY(q &lt;* sdir[i].inspected_instances|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
            IN TYPEOF(q));
     END_REPEAT;
     REPEAT i:= 1 TO SIZEOF(sdir);
       sdei := sdei + QUERY(q &lt;* sdir[i].inspected_instances|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_SCHEMA.'+
           'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES'
            IN TYPEOF(q));
     END_REPEAT;
  
     -- When reports exist, then perform the following checking process.  
     -- Check representative_measured_value of 
     -- shape_data_quality_inspection_criterion_report
     REPEAT i:= 1 TO SIZEOF(sdcr);
      IF(NOT(type_string IN
         TYPEOF(sdcr[i].representative_measured_value))) THEN
         RETURN(FALSE);
       END_IF;
     END_REPEAT;
  
     -- Check measured_value of shape_data_quality_inspection_
     -- instance_report_item
     REPEAT i:= 1 TO SIZEOF(sdii);
       IF(NOT(type_string IN
         TYPEOF(sdii[i].measured_value))) THEN
         RETURN(FALSE);
       END_IF;
     END_REPEAT;
  
     -- Check measured_value of extreme_instances of
     -- instance_report_item_with_extreme_instance
     REPEAT i:= 1 TO SIZEOF(sdei);
       REPEAT j:= 1 TO SIZEOF(sdei[i].extreme_instances);
         IF(NOT(type_string IN
           TYPEOF(sdei[i].extreme_instances[j].measured_value)))
         THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
     END_REPEAT;
  
     RETURN(TRUE);</pre><code>
         END_FUNCTION;
         </code><br><code><br><A NAME="shape_data_quality_criteria_schema.value_limit_type">FUNCTION <b>value_limit_type</b></A><br>&nbsp;(iv : <A HREF="../../../data/resources/shape_data_quality_criteria_schema/shape_data_quality_criteria_schema.htm#shape_data_quality_criteria_schema.shape_data_quality_value_limit_type_select">shape_data_quality_value_limit_type_select</A>) : SET[0:?] OF STRING;
         </code><pre>LOCAL
      retval  : SET OF STRING := [];
    END_LOCAL;
    IF(('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.'
       +'SHAPE_DATA_QUALITY_VALUE_RANGE') IN TYPEOF(iv)) THEN
      retval := TYPEOF(iv\compound_representation_item.item_element[1].value_component);
    END_IF;
    IF(('SHAPE_DATA_QUALITY_CRITERIA_SCHEMA.'
       +'SHAPE_DATA_QUALITY_VALUE_LIMIT') IN TYPEOF(iv)) THEN
          IF(('MEASURE_SCHEMA.' + 'MEASURE_WITH_UNIT') IN TYPEOF(iv)) THEN
             retval := TYPEOF(iv\measure_with_unit.value_component);
         END_IF;
    END_IF;
    RETURN(retval);</pre><code>
         END_FUNCTION;
         </code><br><code><br>
         END_SCHEMA;&nbsp;&nbsp;--&nbsp;shape_data_quality_criteria_schema<br></code></body>
</HTML>